define(["./Cartographic-dafe811b","./Check-07c613bc","./when-207a1520","./EllipseOutlineGeometry-58ce3a6f","./Rectangle-49e286b5","./Math-bae672f2","./arrayFill-84efe123","./buildModuleUrl-c881a5f0","./Intersect-4d67bbf5","./PrimitiveType-44685a19","./Cartesian4-58d59766","./RuntimeError-b98f87df","./WebGLConstants-8d1e45f7","./Event-2ef149d9","./ComponentDatatype-662c7548","./EllipseGeometryLibrary-b663861e","./GeometryAttribute-9a541822","./Cartesian2-4a5e3b0e","./FeatureDetection-fc084259","./GeometryAttributes-d4cebc09","./GeometryOffsetAttribute-da5a1d35","./IndexDatatype-447558fc"],(function(e,i,t,r,n,a,o,l,s,c,u,d,m,p,y,f,_,b,h,M,g,G){"use strict";function x(e){var n=(e=t.u(e,t.u.EMPTY_OBJECT)).radius;i.o.typeOf.number("radius",n);var a={center:e.center,semiMajorAxis:n,semiMinorAxis:n,ellipsoid:e.ellipsoid,height:e.height,extrudedHeight:e.extrudedHeight,granularity:e.granularity,numberOfVerticalLines:e.numberOfVerticalLines};this._ellipseGeometry=new r.M(a),this._workerName="createCircleOutlineGeometry"}x.packedLength=r.M.packedLength,x.pack=function(e,t,n){return i.o.typeOf.object("value",e),r.M.pack(e._ellipseGeometry,t,n)};var v=new r.M({center:new e.t,semiMajorAxis:1,semiMinorAxis:1}),A={center:new e.t,radius:void 0,ellipsoid:n.t.clone(n.t.UNIT_SPHERE),height:void 0,extrudedHeight:void 0,granularity:void 0,numberOfVerticalLines:void 0,semiMajorAxis:void 0,semiMinorAxis:void 0};return x.unpack=function(i,a,o){var l=r.M.unpack(i,a,v);return A.center=e.t.clone(l._center,A.center),A.ellipsoid=n.t.clone(l._ellipsoid,A.ellipsoid),A.height=l._height,A.extrudedHeight=l._extrudedHeight,A.granularity=l._granularity,A.numberOfVerticalLines=l._numberOfVerticalLines,t.e(o)?(A.semiMajorAxis=l._semiMajorAxis,A.semiMinorAxis=l._semiMinorAxis,o._ellipseGeometry=new r.M(A),o):(A.radius=l._semiMajorAxis,new x(A))},x.createGeometry=function(e){return r.M.createGeometry(e._ellipseGeometry)},function(i,r){return t.e(r)&&(i=x.unpack(i,r)),i._ellipseGeometry._center=e.t.clone(i._ellipseGeometry._center),i._ellipseGeometry._ellipsoid=n.t.clone(i._ellipseGeometry._ellipsoid),x.createGeometry(i)}}));
